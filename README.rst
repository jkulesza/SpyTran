SPyTran
=======

Simplified 1D and 2D Sn transport for Nuclear engineering applications written mostly in python.

Solves the steady state neutron balance for multiplying and non-multiplying
systems.

Supports triangular unstructured meshes generated by GMSH.

Currently uses continuous Galerkin FE technique for spatial dicretization.
Plan to move to DG methods.

Install
+++++++

Depends

    - GMSH >=2.8.5
    - Numpy >=1.10
    - Scipy
    - H5py

Optional Depends

    - matplotlib
    - pyeVTK
    - periodictable

Developer install::

    python setup.py develop


Examples
++++++++

See ``/spytran/examples`` directory for 1D and 2D example decks.
Corrosponding GMSH geometry files are in ``/spytran/examplex/geometry``.

Example input file execution::

    $python2 2d_pin.py


Material Library
++++++++++++++++

A list of avalible isotopes is located ``/spytran/materials/``.  The default cross sections
are generated at 293K.

Dopper broadening is performed by the NJOY broadr module.  NJOY bash scripts are provided in ``/spytran/utils``.
Simple inf-media self sheilding is implemented by f-factor lookup.  See the
2d_pin example file for a self sheilded material example (by default inf
dilution xs used - but it is easy to switch on f-factor self sheilding).  Plan is
to move to Bondarenko method in  the future.  See:

www.me.utexas.edu/~deinert/papers/jpne1610-dembia.pdf

Multigroup XS files Fissile isotopes are generated by the
``/spytran/utils/njoybatchGRPfis.sh`` file.
Multigroup XS files non-Fissile isotopes are generated by the
``/spytran/utils/njoybatchGRPnofis.sh`` file.
These scripts operate on entire _directories_ full of raw ENDF files.  
Use the ``/spytran/utils/endfcrawl.py`` script to fetch the entire endfvii library from
the LANL T2 website.  Manually move all fissile endf files into one direcotry and
all nonfissile isotopes to another.  Run the above NJOY scripts and the XS
parser:

NJOY output is parsed by the ``/spytran/utils/njoyParse.py`` script and
witten to a simplified ascii ``.xs`` file for use in spytran.  Place all ``.xs``
files into one directory.  Load the directory containing the
cross section set in the input python script.  See examples cases.


Use
+++

1. Construct GMSH .geo file
2. Write input python script
3. Execute the python input script
4. Visualize


Directory
+++++++++

* /spytran

  - drivers and solvers

  * /spytran/fe
        
        - finite element classes

  * /spytran/materials

        - material mixing routines and xs readers.

  * /spytran/utils

        - parsers and ordinate set generators
        - other extra code

  * /spytran/plotters

        - flux and skernel plotting functions.

  * /spytran/examples

        - 1 and 2D example input scripts

        - /spytran/examples/geometry

            * geometry inputs
  

Contributors
============

William Gurecky
